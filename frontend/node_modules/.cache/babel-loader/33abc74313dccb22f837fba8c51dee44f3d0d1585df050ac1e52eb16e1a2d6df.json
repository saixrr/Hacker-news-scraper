{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Downloads/ganesh/code/hacker-news-scraper/frontend/src/components/StoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StoryCard from './StoryCard';\nimport { fetchStories } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoryList = () => {\n  _s();\n  const [stories, setStories] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track errors\n\n  useEffect(() => {\n    const getStories = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchStories();\n        setStories(data || []); // Ensure `data` is not null or undefined\n      } catch (err) {\n        setError('Failed to fetch stories');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getStories();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (!stories.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stories available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-list\",\n    children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(StoryCard, {\n      ...story\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(StoryList, \"nmfpHWHS2sFiJb7FTRRnO9TKtZY=\");\n_c = StoryList;\nexport default StoryList;\nvar _c;\n$RefreshReg$(_c, \"StoryList\");","map":{"version":3,"names":["React","useState","useEffect","StoryCard","fetchStories","jsxDEV","_jsxDEV","StoryList","_s","stories","setStories","loading","setLoading","error","setError","getStories","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","story","index","_c","$RefreshReg$"],"sources":["/Users/ganesh/Downloads/ganesh/code/hacker-news-scraper/frontend/src/components/StoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StoryCard from './StoryCard';\nimport { fetchStories } from '../services/api';\n\nconst StoryList = () => {\n  const [stories, setStories] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null); // Track errors\n\n  useEffect(() => {\n    const getStories = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchStories();\n        setStories(data || []); // Ensure `data` is not null or undefined\n      } catch (err) {\n        setError('Failed to fetch stories');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getStories();\n  }, []);\n\n  if (loading) {\n    return <p>Loading stories...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!stories.length) {\n    return <p>No stories available.</p>;\n  }\n\n  return (\n    <div className=\"story-list\">\n      {stories.map((story, index) => (\n        <StoryCard key={index} {...story} />\n      ))}\n    </div>\n  );\n};\n\nexport default StoryList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMI,IAAI,GAAG,MAAMZ,YAAY,CAAC,CAAC;QACjCM,UAAU,CAACM,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAAC,yBAAyB,CAAC;QACnCI,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;MACpB,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAa,QAAA,EAAIN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,IAAI,CAACd,OAAO,CAACe,MAAM,EAAE;IACnB,oBAAOlB,OAAA;MAAAa,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EAEA,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,YAAY;IAAAN,QAAA,EACxBV,OAAO,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxBtB,OAAA,CAACH,SAAS;MAAA,GAAiBwB;IAAK,GAAhBC,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAzCID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}